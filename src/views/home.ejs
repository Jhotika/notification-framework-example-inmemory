<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body class="font-sans leading-normal min-h-screen flex flex-col">
    <header class="bg-gray-800 text-white text-center py-4">
        <h1 class="text-2xl"><%= title %></h1>
    </header>
    <main class="flex flex-1 flex-col md:flex-row">
        <div class="w-full md:w-1/2 bg-gray-100 p-8 flex flex-col justify-center items-center">
            <h2 class="text-xl mb-4">Sender (Viewer)</h2>
            <p class="mb-4">Viewer ID: <span id="viewerId" class="font-bold"></span></p>
            <button id="yoButton" class="bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded transition duration-300 w-1/3 aspect-[3/1] flex items-center justify-center">Send Yo</button>
        </div>
        <div class="w-full md:w-1/2 bg-gray-200 p-8 flex flex-col justify-center items-center">
            <h2 class="text-xl mb-4">Receiver (Owner)</h2>
            <p class="mb-4">Owner ID: <span id="ownerId" class="font-bold"></span></p>
            <i class="fas fa-bell text-4xl text-gray-700 mb-4 cursor-pointer"></i>
            <button id="markAllReadBtn" class="bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded transition duration-300 mb-4">Mark All as Read</button>
            <div id="notificationList" class="w-full bg-white border border-gray-300 rounded-lg overflow-y-auto max-h-96">
                <!-- Notifications will be dynamically inserted here -->
            </div>
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const yoButton = document.getElementById('yoButton');
            const notificationList = document.getElementById('notificationList');
            const markAllReadBtn = document.getElementById('markAllReadBtn');
            const viewerIdSpan = document.getElementById('viewerId');
            const ownerIdSpan = document.getElementById('ownerId');

            const mockIds = {
                ownerId: "owner__0001",
                viewerId: "viewer__0001"
            };

            if (viewerIdSpan) viewerIdSpan.textContent = mockIds.viewerId;
            if (ownerIdSpan) ownerIdSpan.textContent = mockIds.ownerId;

            function sendNotification() {
                fetch('http://localhost:8000/notifications', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        senderId: mockIds.viewerId,
                        receiverId: mockIds.ownerId
                    }),
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Success:', data);
                    fetchNotifications();
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
            }

            function fetchNotifications() {
                if (!notificationList) {
                    console.error('Notification list element not found');
                    return;
                }

                fetch(`http://localhost:8000/notifications`)
                .then(response => response.json())
                .then(data => {
                    console.log('Fetched notifications:', data);
                    notificationList.innerHTML = '';
                    if (data.notifications && Array.isArray(data.notifications)) {
                        data.notifications.forEach(addNotificationToList);
                    } else {
                        notificationList.innerHTML = '<p class="p-4 text-gray-500">No notifications found.</p>';
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                    notificationList.innerHTML = '<p class="p-4 text-red-500">Failed to fetch notifications.</p>';
                });
            }

            function addNotificationToList(notification) {
                const notificationTile = document.createElement('div');
                notificationTile.className = `p-4 border-b border-gray-200 flex justify-between items-center ${notification.notification.isRead ? 'bg-gray-100 text-gray-500' : ''}`;
            
                const tickButton = document.createElement('button');
                tickButton.className = `ml-2 ${notification.notification.isRead ? 'text-gray-400 cursor-not-allowed' : 'text-green-500 hover:text-green-700'}`;
                tickButton.innerHTML = '<i class="fas fa-check"></i>';
                tickButton.title = notification.notification.isRead ? 'Already read' : 'Mark as read';
                
                if (!notification.notification.isRead) {
                    tickButton.addEventListener('click', () => markNotificationAsRead(notification.notification.uid));
                } else {
                    tickButton.disabled = true;
                }
            
                notificationTile.innerHTML = `
                    <div class="flex-grow">
                        <div class="font-bold mb-1">From: ${notification.notification.uid || notification.senderUid || 'Unknown Sender'}</div>
                        <div class="${notification.notification.isRead ? 'text-gray-400' : 'text-gray-600'}">${notification.message || 'No message'}</div>
                    </div>
                `;
                notificationTile.appendChild(tickButton);
                notificationList.prepend(notificationTile);
            }

            function markAllNotificationsAsRead() {
                fetch(`http://localhost:8000/notifications/markAllAsRead`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    console.log('All notifications marked as read:', data);
                    fetchNotifications();
                })
                .catch((error) => {
                    console.error('Error marking all notifications as read:', error);
                });
            }

            function markNotificationAsRead(notificationId) {
                fetch(`http://localhost:8000/notifications/${notificationId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Notification marked as read:', data);
                    fetchNotifications();
                })
                .catch((error) => {
                    console.error('Error marking notification as read:', error);
                });
            }

            if (yoButton) {
                yoButton.addEventListener('click', sendNotification);
            } else {
                console.error('Yo button not found');
            }

            if (markAllReadBtn) {
                markAllReadBtn.addEventListener('click', markAllNotificationsAsRead);
            } else {
                console.error('Mark all read button not found');
            }

            fetchNotifications();
            setInterval(fetchNotifications, 10000);
        });
    </script>
</body>
</html>