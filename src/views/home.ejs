<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .container {
            display: flex;
            justify-content: space-between;
        }
        .left-section, .right-section {
            width: 45%;
        }
        .notification-list {
            margin-top: 20px;
        }
        .notification-tile {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .notification-tile.disabled {
            background-color: #f0f0f0;
            color: #aaa;
        }
        .notification-tile.read {
            background-color: #e0ffe0;
            color: #007bff;
        }
        .mark-read-btn {
            background-color: transparent;
            border: none;
            cursor: pointer;
            color: #007bff;
        }
        .mark-read-btn.disabled {
            color: #aaa;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <header>
        <h1><%= title %></h1>
    </header>
    <main class="container">
        <div class="left-section">
            <h2>Sender (Viewer)</h2>
            <p>Viewer ID: <span id="viewerId"></span></p>
            <button id="yoButton" class="btn">Send Yo</button>
        </div>
        <div class="right-section">
            <h2>Receiver (Owner)</h2>
            <p>Owner ID: <span id="ownerId"></span></p>
            <i id="bellIcon" class="fas fa-bell bell-icon"></i>
            <button id="markAllReadBtn" class="mark-all-read-btn">Mark All as Read</button>
            <div id="notificationList" class="notification-list">
                <!-- Notifications will be dynamically inserted here -->
            </div>
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const yoButton = document.getElementById('yoButton');
            const bellIcon = document.getElementById('bellIcon');
            const notificationList = document.getElementById('notificationList');
            const markAllReadBtn = document.getElementById('markAllReadBtn');
            const viewerIdSpan = document.getElementById('viewerId');
            const ownerIdSpan = document.getElementById('ownerId');

            const mockIds = {
                ownerId: "owner__0001",
                viewerId: "viewer__0001"
            };

            if (viewerIdSpan) viewerIdSpan.textContent = mockIds.viewerId;
            if (ownerIdSpan) ownerIdSpan.textContent = mockIds.ownerId;

            function sendNotification() {
                fetch('http://localhost:8000/notifications', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        senderId: mockIds.viewerId,
                        receiverId: mockIds.ownerId
                    }),
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Success:', data);
                    fetchNotifications();
                })
                .catch((error) => {
                    console.error('Error:', error);
                });
            }

            function fetchNotifications() {
                if (!notificationList) {
                    console.error('Notification list element not found');
                    return;
                }

                fetch(`http://localhost:8000/notifications?ownerId=${mockIds.ownerId}`)
                .then(response => response.json())
                .then(data => {
                    console.log('Fetched notifications:', data);
                    notificationList.innerHTML = '';
                    if (data.notifications && Array.isArray(data.notifications)) {
                        data.notifications.forEach(addNotificationToList);
                    } else {
                        notificationList.innerHTML = '<p>No notifications found.</p>';
                    }
                })
                .catch((error) => {
                    console.error('Error:', error);
                    notificationList.innerHTML = '<p>Failed to fetch notifications.</p>';
                });
            }

            function addNotificationToList(notification) {
                const notificationTile = document.createElement('div');
                notificationTile.className = 'notification-tile';
                
                if (notification.isRead) {
                    notificationTile.classList.add('disabled');
                }
                
                notificationTile.innerHTML = `
                    <div class="tile-content ${notification.isRead ? 'disabled' : ''}">
                        <div class="sender-name">From: ${notification.notification.uid || 'Unknown Sender'}</div>
                        <div class="sender-name">From: ${notification.senderUid || 'Unknown Sender'}</div>
                        <div class="message-body">${notification.message || 'No message'}</div>
                    </div>
                `;
                notificationList.prepend(notificationTile);
            }

            function markAllNotificationsAsRead() {
                fetch(`http://localhost:8000/notifications/markAllAsRead`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                })
                .then(response => response.json())
                .then(data => {
                    console.log('All notifications marked as read:', data);
                    fetchNotifications();
                })
                .catch((error) => {
                    console.error('Error marking all notifications as read:', error);
                });
            }

            if (yoButton) {
                yoButton.addEventListener('click', sendNotification);
            } else {
                console.error('Yo button not found');
            }

            if (bellIcon) {
                bellIcon.addEventListener('click', fetchNotifications);
            } else {
                console.error('Bell icon not found');
            }

            if (markAllReadBtn) {
                markAllReadBtn.addEventListener('click', markAllNotificationsAsRead);
            } else {
                console.error('Mark all read button not found');
            }

            fetchNotifications();
            setInterval(fetchNotifications, 10000);
        });
    </script>
</body>
</html>
